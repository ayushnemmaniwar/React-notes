{"version":3,"sources":["logo.svg","components/SetTime.js","components/DataFetching.js","App.js","reportWebVitals.js","index.js"],"names":["SetTime","DataFetching","useState","posts","setPosts","useEffect","axios","get","then","res","console","log","data","catch","err","map","post","title","id","App","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2NAAe,I,8BCsBAA,I,iBCMAC,MAzBf,WACI,MAAuBC,mBAAS,IAAhC,mBAAOC,EAAP,KAAaC,EAAb,KAYA,OAXAC,qBAAU,WACNC,IACCC,IAAI,8CACJC,MAAK,SAAAC,GACFC,QAAQC,IAAIF,GACZL,EAASK,EAAIG,SAEhBC,OAAM,SAAAC,GACHJ,QAAQC,IAAIG,QAElB,IAEE,8BACI,6BAEYX,EAAMY,KAAI,SAACC,GACX,OAAO,mCAAoBA,EAAKC,QAAhBD,EAAKE,YCqC9BC,MA7Cf,WAEE,OACE,qBAAKC,UAAU,MAAf,SACE,cAAC,EAAD,OCLSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.69e09867.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React,{useState,useEffect} from 'react';\r\n\r\nfunction SetTime()\r\n{   const [count,setCount]=useState(0);\r\n    const tick=()=>{\r\n        setCount(count+1);\r\n    }\r\n    useEffect(()=>{\r\n        const interval=setInterval(tick,1000);\r\n        return()=>{\r\n            clearInterval(interval)\r\n        }\r\n    },[count])\r\n    //when you want to stop useeffect and print last stmt\r\n    //we can use return stmt in useeffect\r\n    return(\r\n        <div>\r\n            {count}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SetTime;","import React,{useState,useEffect} from 'react'\r\nimport axios from 'axios';\r\n\r\nfunction DataFetching(){\r\n    const [posts,setPosts]=useState([]);\r\n    useEffect(()=>{\r\n        axios\r\n        .get('https://jsonplaceholder.typicode.com/posts')\r\n        .then(res=>{\r\n            console.log(res);\r\n            setPosts(res.data);\r\n        })\r\n        .catch(err=>{\r\n            console.log(err);\r\n        }) \r\n    },[])\r\n    return(\r\n        <div>\r\n            <ul>\r\n                {\r\n                        posts.map((post)=>{\r\n                        return <li key={post.id}> {post.title}</li>   \r\n                    })\r\n                }\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\nexport default DataFetching;","import logo from './logo.svg';\nimport './App.css';\nimport Props from './components/Props';\nimport UseState from './components/UseState';\nimport Parent from './components/Parent'\nimport Stylesheet from './components/Stylesheet'\nimport Forms from './components/Forms'\nimport HookCounter from './components/HookCounter'\nimport HookCounter3 from './components/HookCounter3';\nimport Arrays from './components/Arrays';\nimport UseEffect from './components/UseEffect';\nimport SetTime from './components/SetTime'\nimport DataFetching from './components/DataFetching'\nfunction App() {\n  \n  return (\n    <div className=\"App\">\n      <DataFetching/>\n      \n      {/* settime */}\n      {/* <SetTime/> */}\n      \n      {/* UseEffect is used to update the title */}\n      {/* <UseEffect/> */}\n\n      {/* arrays */}\n      {/* <Arrays/> */}\n\n      {/* HookCounter3 */}\n      {/* <HookCounter3/> */}\n\n      {/* HookCounter */}\n      {/* <HookCounter/> */}\n      \n      {/* Forms  */}\n      {/* <Forms/> */}\n      \n      {/* {Styles} */}\n      {/* <Stylesheet primary=\"true\"/> */}\n      \n      {/* parent child relation */}\n      {/* <Parent/> */}\n      \n      {/* UseStates */}\n      {/* <UseState/> */}\n      \n      {/* props */}\n      {/* <Props name=\"Ram\">\n      <p>Ram is great</p>\n      </Props>\n      <Props name=\"ravi\">\n      <button>Action</button>\n      </Props>\n      <Props name=\"raju\"/> */}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}